{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/Downloads/nextjs_meetups/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://shehryar:sheryx1744@cluster0.gqpr36i.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(e => ({\n      params: {\n        meetupId: e._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://shehryar:sheryx1744@cluster0.gqpr36i.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetups._id.toString(),\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        description: meetups.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/dev/Downloads/nextjs_meetups/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","description","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","e","params","meetupId","toString","getStaticProps","context","findOne","console","log","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG,WAHhC;AAIE,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,6FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,CAAD,KAAQ;AACzBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AADJ;AADiB,KAAR,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,6FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACgB,OAAlB,CAA0B;AAC9CZ,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADiC,GAA1B,CAAtB;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV4B,QAAAA,EAAE,EAAEjB,OAAO,CAACE,GAAR,CAAYS,QAAZ,EADM;AAEVpB,QAAAA,KAAK,EAAES,OAAO,CAACT,KAFL;AAGVE,QAAAA,OAAO,EAAEO,OAAO,CAACP,OAHP;AAIVH,QAAAA,KAAK,EAAEU,OAAO,CAACV,KAJL;AAKVE,QAAAA,WAAW,EAAEQ,OAAO,CAACR;AALX;AADP;AADF,GAAP;AAWD;AACD,eAAeL,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <div>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        description={props.meetupData.description}\n        address={props.meetupData.address}\n      />\n    </div>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://shehryar:sheryx1744@cluster0.gqpr36i.mongodb.net/?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((e) => ({\n      params: {\n        meetupId: e._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://shehryar:sheryx1744@cluster0.gqpr36i.mongodb.net/?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n  client.close();\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetups._id.toString(),\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        description: meetups.description,\n      },\n    },\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}